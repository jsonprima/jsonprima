mod helpers;

use jsonprima;

// All possible combinations of passed input.
test!(test_0, "0", vec![]);
test!(test_1, "0.0", vec![]);
test!(test_2, "0.01", vec![]);
test!(test_3, "0.01e+1", vec![]);
test!(test_4, "0.01e1", vec![]);
test!(test_5, "0.01e-1", vec![]);
test!(test_6, "0.01e+101", vec![]);
test!(test_7, "0.01e101", vec![]);
test!(test_8, "0.01e-101", vec![]);
test!(test_9, "0.01E+1", vec![]);
test!(test_10, "0.01E1", vec![]);
test!(test_11, "0.01E-1", vec![]);
test!(test_12, "0.01E+101", vec![]);
test!(test_13, "0.01E101", vec![]);
test!(test_14, "0.01E-101", vec![]);
test!(test_15, "0e+1", vec![]);
test!(test_16, "0e1", vec![]);
test!(test_17, "0e-1", vec![]);
test!(test_18, "0e+101", vec![]);
test!(test_19, "0e101", vec![]);
test!(test_20, "0e-101", vec![]);
test!(test_21, "0E+1", vec![]);
test!(test_22, "0E1", vec![]);
test!(test_23, "0E-1", vec![]);
test!(test_24, "0E+101", vec![]);
test!(test_25, "0E101", vec![]);
test!(test_26, "0E-101", vec![]);
test!(test_27, "-0", vec![]);
test!(test_28, "-0.0", vec![]);
test!(test_29, "-0.01", vec![]);
test!(test_30, "-0.01e+1", vec![]);
test!(test_31, "-0.01e1", vec![]);
test!(test_32, "-0.01e-1", vec![]);
test!(test_33, "-0.01e+101", vec![]);
test!(test_34, "-0.01e101", vec![]);
test!(test_35, "-0.01e-101", vec![]);
test!(test_36, "-0.01E+1", vec![]);
test!(test_37, "-0.01E1", vec![]);
test!(test_38, "-0.01E-1", vec![]);
test!(test_39, "-0.01E+101", vec![]);
test!(test_40, "-0.01E101", vec![]);
test!(test_41, "-0.01E-101", vec![]);
test!(test_42, "-0e+1", vec![]);
test!(test_43, "-0e1", vec![]);
test!(test_44, "-0e-1", vec![]);
test!(test_45, "-0e+101", vec![]);
test!(test_46, "-0e101", vec![]);
test!(test_47, "-0e-101", vec![]);
test!(test_48, "-0E+1", vec![]);
test!(test_49, "-0E1", vec![]);
test!(test_50, "-0E-1", vec![]);
test!(test_51, "-0E+101", vec![]);
test!(test_52, "-0E101", vec![]);
test!(test_53, "-0E-101", vec![]);
test!(test_54, "1", vec![]);
test!(test_55, "1.0", vec![]);
test!(test_56, "1.01", vec![]);
test!(test_57, "1.01e+1", vec![]);
test!(test_58, "1.01e1", vec![]);
test!(test_59, "1.01e-1", vec![]);
test!(test_60, "1.01e+101", vec![]);
test!(test_61, "1.01e101", vec![]);
test!(test_62, "1.01e-101", vec![]);
test!(test_63, "1.01E+1", vec![]);
test!(test_64, "1.01E1", vec![]);
test!(test_65, "1.01E-1", vec![]);
test!(test_66, "1.01E+101", vec![]);
test!(test_67, "1.01E101", vec![]);
test!(test_68, "1.01E-101", vec![]);
test!(test_69, "1e+1", vec![]);
test!(test_70, "1e1", vec![]);
test!(test_71, "1e-1", vec![]);
test!(test_72, "1e+101", vec![]);
test!(test_73, "1e101", vec![]);
test!(test_74, "1e-101", vec![]);
test!(test_75, "1E+1", vec![]);
test!(test_76, "1E1", vec![]);
test!(test_77, "1E-1", vec![]);
test!(test_78, "1E+101", vec![]);
test!(test_79, "1E101", vec![]);
test!(test_80, "1E-101", vec![]);
test!(test_81, "-1", vec![]);
test!(test_82, "-1.0", vec![]);
test!(test_83, "-1.01", vec![]);
test!(test_84, "-1.01e+1", vec![]);
test!(test_85, "-1.01e1", vec![]);
test!(test_86, "-1.01e-1", vec![]);
test!(test_87, "-1.01e+101", vec![]);
test!(test_88, "-1.01e101", vec![]);
test!(test_89, "-1.01e-101", vec![]);
test!(test_90, "-1.01E+1", vec![]);
test!(test_91, "-1.01E1", vec![]);
test!(test_92, "-1.01E-1", vec![]);
test!(test_93, "-1.01E+101", vec![]);
test!(test_94, "-1.01E101", vec![]);
test!(test_95, "-1.01E-101", vec![]);
test!(test_96, "-1e+1", vec![]);
test!(test_97, "-1e1", vec![]);
test!(test_98, "-1e-1", vec![]);
test!(test_99, "-1e+101", vec![]);
test!(test_100, "-1e101", vec![]);
test!(test_101, "-1e-101", vec![]);
test!(test_102, "-1E+1", vec![]);
test!(test_103, "-1E1", vec![]);
test!(test_104, "-1E-1", vec![]);
test!(test_105, "-1E+101", vec![]);
test!(test_106, "-1E101", vec![]);
test!(test_107, "-1E-101", vec![]);
test!(test_108, "19", vec![]);
test!(test_109, "19.0", vec![]);
test!(test_110, "19.01", vec![]);
test!(test_111, "15.01e+1", vec![]);
test!(test_112, "11.01e1", vec![]);
test!(test_113, "16.01e-1", vec![]);
test!(test_114, "15.01e+101", vec![]);
test!(test_115, "11.01e101", vec![]);
test!(test_116, "17.01e-101", vec![]);
test!(test_117, "19.01E+1", vec![]);
test!(test_118, "18.01E1", vec![]);
test!(test_119, "16.01E-1", vec![]);
test!(test_120, "18.01E+101", vec![]);
test!(test_121, "16.01E101", vec![]);
test!(test_122, "17.01E-101", vec![]);
test!(test_123, "19e+1", vec![]);
test!(test_124, "12e1", vec![]);
test!(test_125, "19e-1", vec![]);
test!(test_126, "11e+101", vec![]);
test!(test_127, "19e101", vec![]);
test!(test_128, "19e-101", vec![]);
test!(test_129, "18E+1", vec![]);
test!(test_130, "17E1", vec![]);
test!(test_131, "19E-1", vec![]);
test!(test_132, "18E+101", vec![]);
test!(test_133, "19E101", vec![]);
test!(test_134, "15E-101", vec![]);
test!(test_135, "-19", vec![]);
test!(test_136, "-19.0", vec![]);
test!(test_137, "-18.01", vec![]);
test!(test_138, "-12.01e+1", vec![]);
test!(test_139, "-19.01e1", vec![]);
test!(test_140, "-19.01e-1", vec![]);
test!(test_141, "-11.01e+101", vec![]);
test!(test_142, "-19.01e101", vec![]);
test!(test_143, "-19.01e-101", vec![]);
test!(test_144, "-18.01E+1", vec![]);
test!(test_145, "-11.01E1", vec![]);
test!(test_146, "-19.01E-1", vec![]);
test!(test_147, "-18.01E+101", vec![]);
test!(test_148, "-16.01E101", vec![]);
test!(test_149, "-17.01E-101", vec![]);
test!(test_150, "-19e+1", vec![]);
test!(test_151, "-18e1", vec![]);
test!(test_152, "-16e-1", vec![]);
test!(test_153, "-13e+101", vec![]);
test!(test_154, "-17e101", vec![]);
test!(test_155, "-18e-101", vec![]);
test!(test_156, "-15E+1", vec![]);
test!(test_157, "-14E1", vec![]);
test!(test_158, "-10E-1", vec![]);
test!(test_159, "-13E+101", vec![]);
test!(test_160, "-16E101", vec![]);
test!(test_161, "-11E-101", vec![]);

// Whitespace before and after number.
test!(test_162, "\t  \r\n5\t\t\t \n", vec![]);

// Ignore byte order mark.
test!(test_163, "\u{feff}  0.1", vec![]);
